<schema package="mrg.grid">

<!--
/*
 * Copyright 2008 Red Hat, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->

<group name="daemon-stats">
  <property name="CondorPlatform"
	    type="sstr"
	    desc="The Condor platform string for the daemon's platform"/>
  <property name="CondorVersion"
	    type="sstr"
	    desc="The Condor version string for the daemon's version"/>
  <property name="DaemonStartTime"
	    type="absTime" unit="nanosecond"
	    desc="Number of nanoseconds since epoch when the daemon
		  was started"/>

  <statistic name="MonitorSelfAge" type="uint32"/>
  <statistic name="MonitorSelfCPUUsage" type="double"/>
  <statistic name="MonitorSelfImageSize" type="double"/>
  <statistic name="MonitorSelfRegisteredSocketCount" type="uint32"/>
  <statistic name="MonitorSelfResidentSetSize" type="uint32"/>
  <statistic name="MonitorSelfTime" type="absTime"/>
</group>

<!--
CpuBusy = ((LoadAvg - CondorLoadAvg) >= 0.500000)
CpuBusyTime = 0
CpuIsBusy = FALSE

HasCheckpointing = TRUE
HasFileTransfer = TRUE
HasIOProxy = TRUE
HasJava = TRUE
HasJICLocalConfig = TRUE
HasJICLocalStdin = TRUE
HasJobDeferral = TRUE
HasMPI = TRUE
HasPerFileEncryption = TRUE
HasReconnect = TRUE
HasRemoteSyscalls = TRUE
HasTDP = TRUE
HasVM = FALSE

JavaMFlops = 8.156164
JavaVendor = "Free Software Foundation, Inc."
JavaVersion = "1.4.2"

Subnet = "10.16.43"

Set by Collector:
  UpdateSequenceNumber = 627
  UpdatesHistory = "0x00000000000000000000000000000000"
  UpdatesLost = 0
  UpdatesSequenced = 58
  UpdatesTotal = 59
-->

  <class name="Slot">

    <group name="daemon-stats"/>

    <property name="Pool" type="sstr" index="y"/>
    <property name="System" type="sstr" index="y"/>

    <property name="AccountingGroup"
	      type="sstr"
	      optional="y"
	      desc="AccountingGroup of the running job, fully
		    qualified with a UidDomain, UidDomain taken from
		    RemoteUser, only present when a job is
		    executing"/>
    <statistic name="Activity"
	       type="sstr"
	       desc="One of: Idle, No job activity; Busy, Job is
		     running; Suspended, Job is suspended; Vacating,
		     Job is being removed; Killing, Job is being
		     killed; Benchmarking, Benchmarks being run"/>
    <property name="Arch"
	      type="sstr"
	      desc="Slot's architecture, e.g.: ALPHA, Diginal Alpha;
		    HPPA1, HP PA-RISC 1.x (7000 series); HPPA2, HP
		    PA-RISC 2.x (8000 series); IA64, Intel Itanium;
		    INTEL, Intel x86 (Pentium, Xeon, etc); SGI, SGI
		    MIPS; SUN4u, Sun UltraSparc; SUN4x, Sun Sparc
		    (not UltraSparc); PPC, Power Macintosh; PPC64,
		    64-bit Power Macintosh; X86_64, AMD/Intel 64-bit
		    x86"/>
    <property name="CheckpointPlatform"
	      type="sstr"
	      desc="Opaque string encoding OS, hardware and kernel
		    attributes"/>
    <property name="ClientMachine"
	      type="sstr"
	      optional="y"
	      desc="The hostname of the machine that has claimed the
		    slot, only present when slot is claimed"/>
    <statistic name="ClockDay"
	       type="uint32"
	       desc="Day of the week: 0 = Sunday, 1 = Monday, ..., 6 =
		     Saturaday"/>
    <statistic name="ClockMin"
	       type="uint32" unit="minute"
	       desc="Number of elapsed minutes since midnight"/>
    <property name="ConcurrencyLimits"
	      type="sstr"
	      optional="y"
	      desc="Set of concurrency limits associated with the
		    current job"/>
    <statistic name="CondorLoadAvg"
	       type="double"
	       desc="Portion of LoadAvg generated by Condor (job or
		     benchmark)"/>
    <statistic name="ConsoleIdle"
	       type="uint32" unit="second"
	       desc="Seconds since activity on console keyboard or
		     mouse"/>
    <property name="Cpus"
	      type="uint32"
	      desc="Number of CPUs in slot"/>
    <!-- XXX: CurrentRank could quite possibly be a statistic -->
    <property name="CurrentRank"
	      type="double"
	      optional="y"
	      desc="Slots' affinity for running the job it is
		    currently hosting, calculated as Rank expression
		    evaluated in context of the running job's ad"/>
    <property name="Disk"
	      type="uint32" unit="KiB"
	      desc="Amount of disk space in KiB available in the slot"/>
    <statistic name="EnteredCurrentActivity"
	       type="absTime" unit="nanosecond"
	       desc="Time at which current Activity was entered,
		     number of nanoseconds since Unix epoch"/>
    <statistic name="EnteredCurrentState"
	       type="absTime" unit="nanosecond"
	       desc="Time at which current State was entered,
		     number of seconds since Unix epoch"/>
    <property name="FileSystemDomain"
	      type="sstr"
	      desc="Configured namespace shared by slots with
		    uniformly mounted shared storage"/>
    <property name="GlobalJobId"
	      type="sstr"
	      optional="y"
	      desc="The running job's GlobalJobId, only present when
		    a job is executing"/>
    <!-- XXX: ImageSize could quite possibly be a statistic -->
    <property name="ImageSize"
	      type="uint32" unit="KiB"
	      optional="y"
	      desc="Estimate of the memory image size, in KiB, of the
		    running job, only present when a job is
		    executing, pulled by STARTD_JOB_EXPRS"/>
    <property name="IsValidCheckpointPlatform"
	      type="lstr"
	      desc="A configurable expression representing if a
		    checkpointed job can run on the slot, part of the
		    slot's Requirements along with the Start
		    expression"/>
    <!-- XXX: JobId could quite possibly be a statistic, snapshots
	      would show use over time -->
    <property name="JobId"
	      type="sstr"
	      optional="y"
	      desc="The running job's identifier,
		    i.e. ClusterId.ProcId, only present when a job is
		    executing"/>
    <property name="JobStart"
	      type="absTime" unit="nanosecond"
	      optional="y"
	      desc="The number of nanosecond since epoch when the job
		    began executing, only present when a job is
		    executing"/>
    <statistic name="KeyboardIdle"
	       type="uint32" unit="second"
	       desc="Number of seconds since any activity on any
		     keyboard or mouse associated with the machine,
		     including pseudo-terminals"/>
    <property name="KFlops"
	      type="uint32"
	      desc="Relative floating point performance on a Linpack
		    benchmark"/>
    <statistic name="LastBenchmark"
	       type="absTime" unit="nanosecond"
	       desc="Number of nanoseconds since epoch when the last
		     benchmark was run"/>
    <statistic name="LastFetchWorkCompleted"
	       type="absTime" unit="nanosecond"
	       desc="Number of nanoseconds since epoch when the
		     FetchWork Hook returned"/>

    <statistic name="LastFetchWorkSpawned"
	       type="absTime" unit="nanosecond"
	       desc="Number of nanoseconds since epoch when the
		     FetchWork Hook was invoked"/>
    <statistic name="LastPeriodicCheckpoint"
	       type="absTime" unit="nanosecond"
	       desc="The number of nanoseconds since epoch when the
		     job last performed a periodic checkpoint, only
		     present when a job is executing"/>
<!--
    <statistic name="LastHeardFrom"
	       type="absTime" unit="nanosecond"
	       desc="Time when the Collector received an update from
		     the slot, nanoseconds since epoch, inserted by
		     Collector"/>
-->
    <statistic name="LoadAvg"
	       type="double"
	       desc="Load average of CPUs hosting the slot"/>
    <property name="Machine"
	      type="sstr"
	      desc="The fully qualified hostname of slot's host
		    machine"/>
    <property name="MaxJobRetirementTime"
	      type="lstr" unit="second"
	      desc="Expression evaluated in context of job ad
		    producing the number of seconds a job is allowed
		    to finish before being killed, relevant when job
		    is being kicked out of the slot"/>
    <property name="Memory"
	      type="uint32" unit="MiB"
	      desc="Amount of RAM available in the slot, in MiB"/>
    <property name="Mips"
	      type="uint32"
	      desc="Relative integer performance on a Dhrystone
		    benchmark"/>
    <property name="MyAddress"
	      type="sstr"
	      desc="IP:Port of StartD in charge of the slot"/>
    <statistic name="MyCurrentTime"
	       type="absTime" unit="nanosecond"
	       desc="The number of nanoseconds since epoch that the
		     slot produced an updated ad"/>
<!--
    <property name="MyType"
	       type="sstr"
	       desc="Always 'Machine'"\>
-->
    <property name="Name"
	      type="sstr"
	      index="y"
	      desc="Name of the slot, either the same as Machine,
		    slot#@Machine, or a configured value"/>
    <statistic name="NextFetchWorkDelay"
	       type="int32" unit="second"
	       desc="Number of seconds until the next FetchWork
		     Hook will be invoked, -1 means never"/>
    <property name="OpSys"
	      type="sstr"
	      desc="Slot's operating system, e.g.: HPUX10, HPUX
		    10.20; HPUX11, HPUX B.11.00; LINUX, Linux
		    2.[0,2,4,6].x kernels; OSF1, Diginal Unix 4.x;
		    OSX, Darwin; OSX10_2, Darwin 6.4; SOLARIS25,
		    Solaris 2.4 or 5.5; SOLARIS251, Solaris 2.5.1 or
		    5.5.1; SOLARIS26, Solaris 2.6 or 5.6; SOLARIS27,
		    Solaris 2.7 or 5.7; SOLARIS28, Solaris 2.8 or
		    5.8; SOLARIS29, Solaris 2.9 or 5.9; WINNT50,
		    Windows 2000; WINNT51, Windows XP; WINNT52,
		    Windows Server 2003; WINNT60, Windows Vista"/>
    <property name="PreemptingConcurrencyLimits"
	      type="sstr"
	      optional="y"
	      desc="Set of concurrency limits associated with the
		    preempting job"/>
    <property name="PreemptingOwner"
	      type="sstr"
	      optional="y"
	      desc="The name of the user originally preempting the
		    current job, i.e. the incoming user, only present
		    when slot is claimed"/>
    <!-- XXX: PreemptingUser could quite possibly be a statistic -->
    <property name="PreemptingUser"
	      type="sstr"
	      optional="y"
	      desc="The name of the user preempting the current job,
		    different from PreemptingOwner only if the claim
		    was given to another user who is using it to
		    preempt, only present when slot is claimed"/>
    <!-- XXX: PreemptingRank could quite possibly be a statistic -->
    <property name="PreemptingRank"
	      type="double"
	      optional="y"
	      desc="Slots' affinity for running the incoming,
		    preempting, job, calculated as Rank expression
		    evaluated in context of the incoming job's ad,
		    only present when slot is claimed"/>
    <!-- XXX: RemoteOwner could quite possibly be a statistic, showing
	      use over time -->
    <property name="RemoteOwner"
	      type="sstr"
	      optional="y"
	      desc="The name of the user who originally claimed the
		    slot, only present when slot is claimed"/>
    <!-- XXX: RemoteUser could quite possibly be a statistic, showing
	      use over time -->
    <property name="RemoteUser"
	      type="sstr"
	      optional="y"
	      desc="The name of the user who is currently using the
		    slot, different from RemoteOwner only if the
		    claim was given to another user who is using the
		    slot, only present when slot is claimed"/>
    <property name="Requirements"
	      type="lstr"
	      desc="Expression evaluated in the context of a job ad
		    to determine if the slot will run a job"/>
    <property name="PublicNetworkIpAddr"
	      type="sstr"
	      desc="IP:Port used to communicate with the slot"/>
    <property name="Rank"
	      type="lstr"
	      desc="Configured expression representing how the slot
		    prefers jobs"/>
    <property name="SlotID"
	      type="uint32"
	      desc="The # in the slot's Name, i.e. Name='slot#@Machine'"/>
    <property name="Start"
	      type="lstr"
	      desc="Expression evaluated to determine if a slot is
		    willing to start running a job"/>
    <property name="StarterAbilityList"
	      type="lstr"
	      desc="StringList, comma separated, set of abilities the
		    slot has, i.e. HasFileTransfer,HasJava,HasVM,
		    query with stringListMember('Element',
		    StarterAbilityList)"/>
    <statistic name="State"
	       type="sstr"
	       desc="One of: Owner, unavailable to Condor; Unclaimed,
		     available to Condor, but no job match yet;
		     Matched, job found, but not yet claimed; Claimed,
		     claimed and job likely running (see Activity);
		     Preempting, running job is being kicked off the
		     slot"/>
<!--
    <statistic name="TargetType"
	       type="sstr"
	       desc="Always 'Job'"/>
-->
    <statistic name="TimeToLive"
	       type="uint32" unit="second"
	       desc="Number of second until StartD managing the slot
		     has until it will exit"/>
    <!-- XXX: TotalClaimRunTime is a statistic -->
    <property name="TotalClaimRunTime"
	      type="uint32" unit="second"
	      optional="y"
	      desc="Number of seconds the current claim has spent
		    running jobs, only present when slot is
		    claimed"/>
    <!-- XXX: TotalClaimSuspendTime is a statistic -->
    <property name="TotalClaimSuspendTime"
	      type="uint32" unit="second"
	      optional="y"
	      desc="Number of seconds the current claim has spent
		    with suspended jobs, only present when slot is
		    claimed"/>
    <statistic name="TotalCondorLoadAvg"
	       type="double"
	       desc="Portion of TotalLoadAvg generated by Condor (jobs
		     or benchmarks)"/>
    <property name="TotalCpus"
	      type="uint32"
	      desc="Total number of CPUs on slot's host machine, or
		    NUM_CPUS configuration option"/>
    <property name="TotalDisk"
	      type="uint32" unit="KiB"
	      desc="Amount of disk space available on the slot's host
		    machine"/>
    <!-- XXX: TotalJobRunTime is a statistic -->
    <property name="TotalJobRunTime"
	      type="uint32" unit="second"
	      optional="y"
	      desc="Number of seconds the current job has spent
		    running, i.e. Claimed/Busy, only present when
		    slot is claimed"/>
    <!-- XXX: TotalJobSuspendTime is a statistic -->
    <property name="TotalJobSuspendTime"
	      type="uint32" unit="second"
	      optional="y"
	      desc="Number of seconds the current job has spent
		    suspended, i.e. Claimed/Suspended, only present
		    when slot is claimed"/>
    <statistic name="TotalLoadAvg"
	       type="double"
	       desc="Total load average of the slot's host machine"/>
    <property name="TotalMemory"
	      type="uint32" unit="MiB"
	      desc="Total RAM available on slot's machine, in MiB"/>
    <property name="TotalSlots"
	      type="uint32"
	      desc="Total number of slots sharing the Machine"/>
    <statistic name="TotalTimeBackfillBusy"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Backfill and Activity=Busy since the
		     Startd started"/>
    <statistic name="TotalTimeBackfillIdle"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Backfill and Activity=Idle since the
		     Startd started"/>
    <statistic name="TotalTimeBackfillKilling"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Backfill and Activity=Killing since the
		     Startd started"/>
    <statistic name="TotalTimeClaimedBusy"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Claimed and Activity=Busy since the
		     Startd started"/>
    <statistic name="TotalTimeClaimedIdle"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Claimed and Activity=Idle since the
		     Startd started"/>
    <statistic name="TotalTimeClaimedRetiring"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Claimed and Activity=Retiring since the
		     Startd started"/>
    <statistic name="TotalTimeClaimedSuspended"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Claimed and Activity=Suspended since the
		     Startd started"/>
    <statistic name="TotalTimeMatchedIdle"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Matched and Activity=Idle since the
		     Startd started"/>
    <statistic name="TotalTimeOwnerIdle"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Owner and Activity=Idle since the
		     Startd started"/>
    <statistic name="TotalTimePreemptingKilling"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Preempting and Activity=Killing since the
		     Startd started"/>
    <statistic name="TotalTimePreemptingVacating"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Preempting and Activity=Vacating since the
		     Startd started"/>
    <statistic name="TotalTimeUnclaimedBenchmarking"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Unclaimed and Activity=Benchmarking since
		     the Startd started"/>
    <statistic name="TotalTimeUnclaimedIdle"
	       type="uint32" unit="second"
	       desc="Accumulated number of seconds the slot has been
		     in State=Unclaimed and Activity=Idle since the
		     Startd started"/>
    <property name="TotalVirtualMemory"
	      type="uint32" unit="KiB"
	      desc="Amount of swap space available on slot"/>
    <property name="UidDomain"
	      type="sstr"
	      desc="Configured namespace shared by slots with
		    uniform uid/gid entries, i.e. same logins and
		    groups"/>
    <property name="VirtualMemory"
	      type="uint32" unit="KiB"
	      desc="Amount of currently available virtual memory
		    (swap space) in KiB"/>
    <property name="WindowsBuildNumber"
	      type="uint32"
	      desc="Integer extracted from the platform type,
		    representing a build number for a Windows
		    operating system, only present on Windows
		    slots"/>
    <property name="WindowsMajorVersion"
	      type="uint32"
	      desc="Integer extracted from the platform type,
		    representing a major version number for a Windows
		    operating system, only present on Windows
		    slots, e.g. 5 for OpSys=WINNT50"/>
    <property name="WindowsMinorVersion"
	      type="uint32"
	      desc="Integer extected from the platform type,
		    representing a minor version numer for a Windows
		    operating system, only present on Windows
		    slots, e.g. 2 for OpSys=WINNT52"/>

<!--
    <property name="AdditionalAttributes" type="map"/>
-->
  </class>

<!--
Exec Host, Order(Rank?), StartTime, TotalTime (Sys, User), Project, AccountingGroup
-->
  <class name="Job">
    <property name="schedulerRef" type="objId" index="y" references="mrg.grid.Scheduler"/>
    <property name="submitterRef" type="objId" references="mrg.grid.Submitter"/>

    <property name="AccountingGroup" type="sstr" optional="y" desc=""/>
    <property name="Args" type="lstr" optional="y" desc=""/>
    <property name="ClusterId"
	      type="uint32" index="y"
	      desc="The id of the cluster the job belongs
		    to. ClusterIds are unique within a SchedD."/>
    <property name="Cmd" type="lstr" desc=""/>
    <property name="ConcurrencyLimits" type="lstr" optional="y" desc=""/>
    <property name="CustomGroup" type="sstr" optional="y" desc=""/>
    <property name="CustomId" type="sstr" optional="y" desc=""/>
    <property name="CustomPriority" type="uint32" optional="y" desc=""/>
    <property name="GlobalJobId" type="sstr" desc=""/>
    <property name="In"
	      type="lstr"
	      desc="The file where the job's standard input is read
		    from."/>
    <property name="Iwd" type="lstr" desc=""/>
    <property name="JobStatus"
	      type="uint32"
	      desc="One of: 0, unexpanded; 1, idle; 2, running; 3,
		    removed; 4, completed; 5, held; or, 6, submission
		    error"/>
    <property name="Note"
	      type="lstr" optional="y"
	      desc="An arbitrary note attached to the job."/>
    <property name="Out"
	      type="lstr"
	      desc="The file where the job's standard output is
		    written."/>
    <property name="Owner"
	      type="sstr"
	      desc="The submitter of the job."/>
    <property name="User"
	      type="sstr"
	      desc="The Owner '@' the configured UidDomain namespace"/>
    <property name="ProcId"
	      type="uint32" index="y"
	      desc="The id of the job within its cluster. ProcIds re
		    unique within a cluster."/>
    <property name="QDate"
	      type="absTime" unit="nanoseconds"
	      desc="The number of nanoseconds since epoch when the
		    job was submitted."/>

<!--
    <property name="Requirements" type="lstr" desc=""/>
    <property name="Scheduler" type="sstr" desc=""/>
-->

    <property name="JobUniverse"
	      type="uint32"
	      desc=""/>

    <property name="Title" type="sstr" optional="y" desc=""/>
    <property name="UserLog" type="lstr" optional="y" desc=""/>

    <property name="HoldReason" type="lstr" optional="y" desc=""/>

    <property name="DAGNodeName"
	      type="sstr" optional="y" desc=""/>
    <property name="DAGParentNodeNames"
	      type="lstr" optional="y"
	      desc="Comma separated list of the job's parent's node
		    names"/>
    <property name="DAGManJobId"
	      type="uint32" optional="y"
	      desc="The ClusterId of the DAGMan job who spawned the
		    job"/>

    <property name="Ad" type="map" optional="y" desc=""/>

    <method name="GetAd">
      <arg name="JobAd" dir="O" type="map"
	   desc="(name,value,type) tuples; Values are INTEGER, FLOAT,
		 STRING and EXPR. The EXPR value is not first class,
		 it is an unquoted, with double quotes, string"/>
    </method>

    <method name="SetAttribute">
      <arg name="Name" dir="I" type="sstr"/>
      <arg name="Value" dir="I" type="lstr"/>
    </method>

    <method name="Hold">
      <arg name="Reason" dir="I" type="sstr"/>
    </method>

    <method name="Release">
      <arg name="Reason" dir="I" type="sstr"/>
    </method>

    <method name="Remove">
      <arg name="Reason" dir="I" type="sstr"/>
    </method>

    <method name="Fetch">
      <arg name="File" dir="I" type="sstr"/>
      <arg name="Start" dir="I" type="int32"/>
      <arg name="End" dir="I" type="int32"/>
      <arg name="Data" dir="O" type="lstr"/>
    </method>
  </class>

  <class name="Scheduler">
    <group name="daemon-stats"/>

    <property name="Pool" type="sstr" index="y"/>
    <property name="System" type="sstr" index="y"/>

    <property name="JobQueueBirthdate" type="absTime"/>
    <property name="MaxJobsRunning" type="uint32" desc=""/>
    <property name="Machine" type="sstr" desc=""/>
    <property name="MyAddress" type="sstr" desc=""/>
    <statistic name="NumUsers" type="uint32"/>
    <property name="Name" type="sstr" index="y" desc=""/>
    <property name="PublicNetworkIpAddr" type="sstr" desc=""/>
    <statistic name="TotalHeldJobs" type="uint32"/>
    <statistic name="TotalIdleJobs" type="uint32"/>
    <statistic name="TotalJobAds" type="uint32"/>
    <statistic name="TotalRemovedJobs" type="uint32"/>
    <statistic name="TotalRunningJobs" type="uint32"/>    
  </class>

  <class name="Submitter">
    <property name="schedulerRef" type="objId" parentRef="y" index="y" references="mrg.grid.Scheduler"/>

    <statistic name="HeldJobs" type="uint32"/>
    <statistic name="IdleJobs" type="uint32"/>
    <property name="JobQueueBirthdate" type="absTime"/>
    <property name="Machine" type="sstr"/>
    <property name="Name" type="sstr" index="y"/>
    <statistic name="RunningJobs" type="uint32"/>
    <property name="ScheddName" type="sstr"/>
  </class>

  <class name="Negotiator">
    <property name="Pool" type="sstr" index="y"/>
    <property name="System" type="sstr" index="y"/>

    <property name="Name" type="sstr" index="y"/>
    <property name="Machine" type="sstr"/>
    <property name="MyAddress" type="sstr" desc=""/>

    <!-- NOTE: MonitorSelf* statistics are currently missing in 7.0.0 -->
    <group name="daemon-stats"/>

    <method name="GetLimits">
      <arg name="Limits" dir="O" type="map"/>
    </method>

    <method name="SetLimit">
      <arg name="Name" dir="I" type="sstr"/>
      <arg name="Max" dir="I" type="double"/>
    </method>

    <method name="Reconfig"/>
  </class>

  <class name="Collector">
    <property name="Pool" type="sstr" index="y"/>
    <property name="System" type="sstr" index="y"/>

    <property name="CondorPlatform" type="sstr"/>
    <property name="CondorVersion" type="sstr"/>
    <property name="Name" type="sstr" index="y"/>
    <property name="PublicNetworkIpAddr" type="sstr"/>
  </class>

  <class name="Master">

    <group name="daemon-stats"/>

    <property name="Pool" type="sstr" index="y"/>
    <property name="System" type="sstr" index="y"/>

    <property name="Name" type="sstr" index="y"/>
    <property name="Machine" type="sstr"/>
    <property name="PublicNetworkIpAddr" type="sstr"/>
    <property name="MyAddress" type="sstr"/>
    <property name="RealUid" type="int32"/>

    <method name="Start">
      <arg name="Subsystem"
	   dir="I" type="sstr"
	   desc="The component/subsystem to start: one of STARTD,
		 SCHEDD, COLLECTOR, NEGOTIATOR, KBDD or QUILL"/>
    </method>

    <method name="Stop">
      <arg name="Subsystem"
	   dir="I" type="sstr"
	   desc="The component/subsystem to stop: one of STARTD,
		 SCHEDD, COLLECTOR, NEGOTIATOR, KBDD or QUILL"/>
    </method>
  </class>
</schema>
